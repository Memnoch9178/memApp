Metadata-Version: 2.4
Name: memApp
Version: 0.1.0
Summary: Application modulaire pour la gestion de mémoire et d’installation automatique.
Author: Memnoch9178
Requires-Python: >=3.8
Description-Content-Type: text/markdown
Requires-Dist: flask>=2.0
Requires-Dist: cerberus>=1.3
Requires-Dist: watchdog>=2.1
Requires-Dist: pydantic>=2.0
Requires-Dist: python-dotenv>=1.0
Requires-Dist: rich>=13.0
Provides-Extra: dev
Requires-Dist: pytest>=7.0; extra == "dev"
Requires-Dist: flake8>=4.0; extra == "dev"
Requires-Dist: black>=22.0; extra == "dev"
Requires-Dist: mypy>=1.0; extra == "dev"
Requires-Dist: coverage>=7.0; extra == "dev"

# memApp

Application modulaire pour la gestion de mémoire et d’installation automatique.

## Installation

Voir la documentation dans `docs/` pour les instructions détaillées.

## Structure
- `src/` : code source principal
- `tests/` : tests unitaires et d’intégration
- `docs/` : documentation, mémoire projet, changelog, ADR

## Configuration
Copiez `.env.example` en `.env` et adaptez les variables selon votre environnement.

## Convention de configuration YAML

Chaque fichier de configuration doit regrouper les paramètres par section, selon le service ou module concerné :

```yaml
memApp:
  watchdog:
    enabled: true
    interval: 5
  database:
    host: localhost
    port: 5432
```

- Les sections racines correspondent au nom du service/module/plugin.
- Tous les paramètres d’un élément sont regroupés dans sa section.
- Cette convention s’applique à tous les fichiers `config.yml` du projet.
